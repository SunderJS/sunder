(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{81:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return o})),n.d(t,"metadata",(function(){return i})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return c}));var a=n(3),r=n(7),s=(n(0),n(94)),o={slug:"introducing-sunder",title:"Introducing Sunder",author:"Guido Zuidhof",author_url:"https://github.com/gzuidhof",author_image_url:"https://avatars1.githubusercontent.com/u/1039510?s=460&v=4",tags:[]},i={permalink:"/blog/introducing-sunder",editUrl:"https://github.com/gzuidhof/sunder/edit/master/website/blog/blog/2020-12-02-introducing-sunder.md",source:"@site/blog\\2020-12-02-introducing-sunder.md",description:"Sunder is a framework for Service Workers like those found in Cloudflare Workers. It allows you to create testable APIs and websites in a similar way as you would using Node.js's Koa or Express framework.",date:"2020-12-02T00:00:00.000Z",tags:[],title:"Introducing Sunder",readingTime:1.695,truncated:!0,prevItem:{title:"Moving Towards Cloudflare Workers Modules",permalink:"/blog/moving-towards-modules"}},l=[{value:"Everything is middleware",id:"everything-is-middleware",children:[]},{value:"Strict routes",id:"strict-routes",children:[]},{value:"So can I use this?",id:"so-can-i-use-this",children:[]}],u={rightToc:l};function c(e){var t=e.components,n=Object(r.a)(e,["components"]);return Object(s.b)("wrapper",Object(a.a)({},u,n,{components:t,mdxType:"MDXLayout"}),Object(s.b)("p",null,"Sunder is a framework for Service Workers like those found in ",Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"https://workers.cloudflare.com"}),"Cloudflare Workers"),". It allows you to create testable APIs and websites in a similar way as you would using Node.js's ",Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"https://koajs.com"}),"Koa")," or ",Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"https://expressjs.com"}),"Express")," framework."),Object(s.b)("p",null,"Sunder is designed to be minimal, testable, and easy to understand. It's only a few hundred lines of code. "),Object(s.b)("h4",{id:"a-small-example"},"A small example"),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),'import {Sunder, Router} from "sunder";\n\nconst app = new Sunder();\nconst router = new Router();\n\n// Example route with a named parameter\nrouter.get("/hello/:username", ({response, params}) => {\n    response.body = `Hello ${params.username}`;\n});\n\napp.use(router.middleware);\n\naddEventListener(\'fetch\', (event) => {\n    const resp = app.handle(event);\n    event.respondWith(resp);\n});\n')),Object(s.b)("p",null,"This is a complete example, bundle it using a tool like ",Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"https://esbuild.github.io/"}),Object(s.b)("inlineCode",{parentName:"a"},"esbuild"))," in under 50ms and it's ready for use in Cloudflare workers."),Object(s.b)("h2",{id:"everything-is-middleware"},"Everything is middleware"),Object(s.b)("p",null,"Inspired by Koa and Elixir's Plug, in Sunder everything is a ",Object(s.b)("em",{parentName:"p"},"middleware"),"."),Object(s.b)("p",null,"A middleware function takes two arguments, the request's ",Object(s.b)("inlineCode",{parentName:"p"},"Context")," and a function that invokes the next middleware. An example explains it best:"),Object(s.b)("pre",null,Object(s.b)("code",Object(a.a)({parentName:"pre"},{className:"language-typescript"}),"async function responseTimeMiddleware(ctx, next) {\n    const start = Date.now();\n    await next();\n    const ms = Date.now() - start;\n    ctx.response.set('X-Response-Time', `${ms}ms`);    \n}\n")),Object(s.b)("p",null,"If you have used ",Object(s.b)("a",Object(a.a)({parentName:"p"},{href:"https://koajs.com"}),"Koa")," in the past, this should look very familiar. By making use of the ",Object(s.b)("inlineCode",{parentName:"p"},"async")," keyword we can ",Object(s.b)("inlineCode",{parentName:"p"},"await")," asynchronous tasks and avoid callback hell. "),Object(s.b)("p",null,"By composing this core building block we can handle any request in an elegant way."),Object(s.b)("h2",{id:"strict-routes"},"Strict routes"),Object(s.b)("p",null,"Typescript recently released support for ",Object(s.b)("a",{href:"https://devblogs.microsoft.com/typescript/announcing-typescript-4-1/#template-literal-types"},"Template Literal Types"),". This allows us to type a route's path parameters in a strict way and catch common mistakes."),Object(s.b)("p",null,Object(s.b)("img",Object(a.a)({parentName:"p"},{src:"https://i.imgur.com/XeOyoxF.gif",alt:"Strict routes GIF"}))),Object(s.b)("blockquote",null,Object(s.b)("p",{parentName:"blockquote"},"Note: You can use Sunder without Typescript too, but you will miss out on this type checking.")),Object(s.b)("h2",{id:"so-can-i-use-this"},"So can I use this?"),Object(s.b)("p",null,"Yes, you can install Sunder now (",Object(s.b)("inlineCode",{parentName:"p"},"npm i sunder"),") and use it in your projects. It is open source under the MIT license."),Object(s.b)("p",null,"It is however still a work in progress, things will change, and the docs are incomplete. The amount of available pre-written middleware is small. Contributions are of course welcome!"))}c.isMDXComponent=!0}}]);