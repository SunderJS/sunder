(window.webpackJsonp=window.webpackJsonp||[]).push([[13],{80:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return i})),a.d(t,"metadata",(function(){return d})),a.d(t,"rightToc",(function(){return l})),a.d(t,"default",(function(){return c}));var n=a(3),o=a(7),r=(a(0),a(94)),i={id:"middleware-introduction",title:"Introduction to Middleware",sidebar_label:"Introduction"},d={unversionedId:"middleware-introduction",id:"middleware-introduction",isDocsHomePage:!1,title:"Introduction to Middleware",description:"Sunder ships with some middleware, it is up to you to compose them. For any non-trivial app you should use the Router middleware.",source:"@site/docs\\middleware-introduction.md",slug:"/middleware-introduction",permalink:"/docs/middleware-introduction",editUrl:"https://github.com/gzuidhof/sunder/edit/master/website/docs/middleware-introduction.md",version:"current",sidebar_label:"Introduction",sidebar:"someSidebar",previous:{title:"Context",permalink:"/docs/context"},next:{title:"Router",permalink:"/docs/middleware-router"}},l=[{value:"Example one: Middleware that logs all requests",id:"example-one-middleware-that-logs-all-requests",children:[]},{value:"Example two: Middleware that prints all errors to console",id:"example-two-middleware-that-prints-all-errors-to-console",children:[]},{value:"Further reading",id:"further-reading",children:[]}],s={rightToc:l};function c(e){var t=e.components,a=Object(o.a)(e,["components"]);return Object(r.b)("wrapper",Object(n.a)({},s,a,{components:t,mdxType:"MDXLayout"}),Object(r.b)("p",null,"Sunder ships with some middleware, it is up to you to ",Object(r.b)("em",{parentName:"p"},"compose")," them. For any non-trivial app you should use the ",Object(r.b)("a",Object(n.a)({parentName:"p"},{href:"/docs/middleware-router"}),Object(r.b)("inlineCode",{parentName:"a"},"Router"))," middleware."),Object(r.b)("p",null,"A middleware is a function that takes a context, and a function that will apply the next middleware. It is a good idea to use the ",Object(r.b)("inlineCode",{parentName:"p"},"async")," keyword for these functions so you can use ",Object(r.b)("inlineCode",{parentName:"p"},"await"),"."),Object(r.b)("h3",{id:"example-one-middleware-that-logs-all-requests"},"Example one: Middleware that logs all requests"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"// Note that in Cloudflare Workers this will always log 0ms as Date.now() always\n// returns the time of the request instead of the wall clock time.\nasync function logRequestsMiddleware(ctx, next: Middleware) {\n  const start = Date.now();\n  await next();\n  const ms = Date.now() - start;\n  console.log(`${ctx.method} ${ctx.url} - ${ms}ms`);\n}\n")),Object(r.b)("h3",{id:"example-two-middleware-that-prints-all-errors-to-console"},"Example two: Middleware that prints all errors to console"),Object(r.b)("pre",null,Object(r.b)("code",Object(n.a)({parentName:"pre"},{className:"language-javascript"}),"async function logErrorsMiddleware(ctx, next: Middleware) {\n  try {\n    await next();\n  } catch(e) {\n    console.error(e);\n    throw e;\n  }\n}\n")),Object(r.b)("h3",{id:"further-reading"},"Further reading"),Object(r.b)("ul",null,Object(r.b)("li",{parentName:"ul"},Object(r.b)("a",Object(n.a)({parentName:"li"},{href:"https://medium.com/trabe/the-elegance-of-asynchronous-middleware-chaining-in-koa-js-ea965f337e63"}),Object(r.b)("strong",{parentName:"a"},"A blogpost about Koa middleware chaining")),": Sunder uses the exact same mechanisms as Koa.")))}c.isMDXComponent=!0}}]);