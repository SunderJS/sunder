(window.webpackJsonp=window.webpackJsonp||[]).push([[8],{75:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return r})),n.d(t,"metadata",(function(){return o})),n.d(t,"rightToc",(function(){return b})),n.d(t,"default",(function(){return d}));var a=n(3),i=n(7),l=(n(0),n(94)),r={id:"changelog",title:"Changelog"},o={unversionedId:"changelog",id:"changelog",isDocsHomePage:!1,title:"Changelog",description:"0.9.2",source:"@site/docs\\changelog.md",slug:"/changelog",permalink:"/docs/changelog",editUrl:"https://github.com/gzuidhof/sunder/edit/master/website/docs/changelog.md",version:"current",sidebar:"someSidebar",previous:{title:"Router",permalink:"/docs/middleware-router"}},b=[{value:"0.9.2",id:"092",children:[]},{value:"0.9.1",id:"091",children:[]},{value:"0.9.0",id:"090",children:[]},{value:"0.8.0",id:"080",children:[]},{value:"0.7.2",id:"072",children:[]},{value:"0.7.1",id:"071",children:[]},{value:"0.7.0",id:"070",children:[]}],c={rightToc:b};function d(e){var t=e.components,n=Object(i.a)(e,["components"]);return Object(l.b)("wrapper",Object(a.a)({},c,n,{components:t,mdxType:"MDXLayout"}),Object(l.b)("h2",{id:"092"},"0.9.2"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Date:")," 2021-10-04"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Added ",Object(l.b)("inlineCode",{parentName:"li"},"Context.response.overwrite")," which allows you to overwrite the Response built up so far.\nThis is very useful in the context of Durable Objects, in which you may want to forward the response.")),Object(l.b)("h2",{id:"091"},"0.9.1"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Date:")," 2021-10-03"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Add ",Object(l.b)("inlineCode",{parentName:"li"},"webSocket")," field to Response to match Cloudflare's (non-standard) API."),Object(l.b)("li",{parentName:"ul"},"You can now pass ",Object(l.b)("inlineCode",{parentName:"li"},"null")," to construct a body.")),Object(l.b)("h2",{id:"090"},"0.9.0"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Date:")," 2021-10-02"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Breaking Change"),": ",Object(l.b)("inlineCode",{parentName:"li"},"Context.state")," has been renamed to ",Object(l.b)("inlineCode",{parentName:"li"},"Context.data")," to prevent confusion when using Durable Objects."),Object(l.b)("li",{parentName:"ul"},"The Sunder app constructor now takes a ",Object(l.b)("inlineCode",{parentName:"li"},"state")," argument for injecting Durable Object state."),Object(l.b)("li",{parentName:"ul"},Object(l.b)("inlineCode",{parentName:"li"},"Context.state")," now contains a Durable Worker state (if any), this means that Sunder now has first class Durable Objects support!")),Object(l.b)("h2",{id:"080"},"0.8.0"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Date:")," 2021-09-27"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},Object(l.b)("strong",{parentName:"li"},"Breaking Change:")," All Sunder types now take an additional ",Object(l.b)("inlineCode",{parentName:"li"},"EnvironmentType")," generic type argument, it is the first such argument (before ",Object(l.b)("inlineCode",{parentName:"li"},"ParamsType")," and ",Object(l.b)("inlineCode",{parentName:"li"},"StateType"),").",Object(l.b)("br",{parentName:"li"}),"The ",Object(l.b)("em",{parentName:"li"},"tl;dr")," fix is to replace ",Object(l.b)("inlineCode",{parentName:"li"},"Context<{id: string}>")," with ",Object(l.b)("inlineCode",{parentName:"li"},"Context<{}, {id: string}>"),"."),Object(l.b)("li",{parentName:"ul"},"Performance improvement for ",Object(l.b)("inlineCode",{parentName:"li"},"get"),", ",Object(l.b)("inlineCode",{parentName:"li"},"set")," and ",Object(l.b)("inlineCode",{parentName:"li"},"has")," shorthands on ",Object(l.b)("inlineCode",{parentName:"li"},"ctx.request")," an anonymous function was created on every invocation before this change."),Object(l.b)("li",{parentName:"ul"},"Support for ",Object(l.b)("inlineCode",{parentName:"li"},"modules")," build-mode in Cloudflare Workers.",Object(l.b)("ul",{parentName:"li"},Object(l.b)("li",{parentName:"ul"},"A new ",Object(l.b)("inlineCode",{parentName:"li"},"fetch")," method was added to ",Object(l.b)("inlineCode",{parentName:"li"},"Sunder")," applications that has the same signature as the "),Object(l.b)("li",{parentName:"ul"},"The ",Object(l.b)("inlineCode",{parentName:"li"},"handle")," method on ",Object(l.b)("inlineCode",{parentName:"li"},"Sunder")," now takes a second argument where you can provide your own ",Object(l.b)("inlineCode",{parentName:"li"},"env")," in case you are not using ",Object(l.b)("inlineCode",{parentName:"li"},"modules"),"."),Object(l.b)("li",{parentName:"ul"},"The Sunder Context now has a ",Object(l.b)("inlineCode",{parentName:"li"},"env")," field, which is type-checked by the Typescript compiler (and supports auto-completion!). ")))),Object(l.b)("h2",{id:"072"},"0.7.2"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Date:")," 2021-05-24"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Changed ",Object(l.b)("inlineCode",{parentName:"li"},"self.Blob")," to ",Object(l.b)("inlineCode",{parentName:"li"},"globalThis.Blob")," to support different environments more easily.")),Object(l.b)("h2",{id:"071"},"0.7.1"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Date:")," 2021-02-14"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Added missing ",Object(l.b)("inlineCode",{parentName:"li"},"Router#options")," function to the router to handle OPTIONS requests.")),Object(l.b)("h2",{id:"070"},"0.7.0"),Object(l.b)("p",null,Object(l.b)("strong",{parentName:"p"},"Date:"),": 2021-01-31"),Object(l.b)("ul",null,Object(l.b)("li",{parentName:"ul"},"Potentially breaking change: Rename ",Object(l.b)("inlineCode",{parentName:"li"},"createError")," to ",Object(l.b)("inlineCode",{parentName:"li"},"createHttpError")," (not exposed from top level Sunder package, but you may have imported it anyway)."),Object(l.b)("li",{parentName:"ul"},"Handlers and Middleware now have a second generic argument, their ",Object(l.b)("inlineCode",{parentName:"li"},"StateType"),", which allows you to type what ",Object(l.b)("inlineCode",{parentName:"li"},"context.state")," your handler/middleware expects."),Object(l.b)("li",{parentName:"ul"},"The ",Object(l.b)("inlineCode",{parentName:"li"},"Router")," class now has a generic type argument, which allows you to define the type of ",Object(l.b)("inlineCode",{parentName:"li"},"context.state")," when it enters your Router.")))}d.isMDXComponent=!0}}]);